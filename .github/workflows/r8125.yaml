name: Build Realtek r8125 driver for OpenWrt

on:
  push:
    branches:
      - main
  # schedule:
  #   - cron: "0 0 * * MON"

env:
  RELEASE_URL: https://gist.githubusercontent.com/csrutil/a448f7d1e9d6f0b8487fabd45dfc759f/raw/26642dc5b5a35cc954e14c7cd5edea8f197dc30d/OpenWrt-NIC-Drivers-release.txt
  KMOD_VERSION: 9.014.01
  APT_URL: https://gist.githubusercontent.com/csrutil/6d83b7dd62b5652697fe22271fbee482/raw/5149abcc3ca3ee48f95978949db528d6bf765daa/depends-ubuntu-2004

jobs:
  build_r8125_modules:
    runs-on: ubuntu-20.04
    continue-on-error: true

    strategy:
      fail-fast: false
      matrix:
        sdk_url:
          - https://downloads.openwrt.org/releases/19.07.10/targets/x86/64/openwrt-sdk-19.07.10-x86-64_gcc-7.5.0_musl.Linux-x86_64.tar.xz
          - https://downloads.openwrt.org/releases/21.02.7/targets/x86/64/openwrt-sdk-21.02.7-x86-64_gcc-8.4.0_musl.Linux-x86_64.tar.xz
          - https://downloads.openwrt.org/releases/22.03.6/targets/x86/64/openwrt-sdk-22.03.6-x86-64_gcc-11.2.0_musl.Linux-x86_64.tar.xz
          - https://downloads.openwrt.org/releases/23.05.4/targets/x86/64/openwrt-sdk-23.05.4-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz
          - https://downloads.openwrt.org/releases/24.10.0-rc2/targets/x86/64/openwrt-sdk-24.10.0-rc2-x86-64_gcc-13.3.0_musl.Linux-x86_64.tar.zst

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Initialize Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo apt-get update -qq
        sudo apt-get install -qq -y $(curl -fsSL $APT_URL) tree jq
        sudo apt-get autoremove --purge -qq
        sudo apt-get clean -qq

    - name: Download and Extract SDK
      run: |
        sdk=$(basename ${{ matrix.sdk_url }} | sed -E 's/\.tar\.(xz|zst)$//')
        wget ${{ matrix.sdk_url }}
        case ${{ matrix.sdk_url }} in
          *.tar.xz) tar -xvf $sdk.tar.xz ;;
          *.tar.zst) tar --zstd -xvf $sdk.tar.zst ;;
        esac
        mkdir -p $sdk/package
        cp -r r8125 $sdk/package/

    - name: Compile Driver
      run: |
        sdk=$(basename ${{ matrix.sdk_url }} | sed -E 's/\.tar\.(xz|zst)$//')

        cd $sdk
        echo 'CONFIG_PACKAGE_kmod-r8125=m' > .config
        make defconfig
        if ! make package/r8125/compile -j$(nproc); then
          make package/r8125/compile -j1 V=sc || echo "Compilation failed for ${{ matrix.sdk_url }}!"
        fi

        cd ${{ github.workspace }}
        mkdir -p artifact
        find . -name 'kmod-r8125*.ipk' -exec mv {} artifact/ \;

        echo "SDK=$sdk" >> $GITHUB_ENV

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: kmod-r8125-${{ env.SDK }}
        path: ${{ github.workspace }}/artifact/**/*
        if-no-files-found: error

  collect_and_upload:
    needs: build_r8125_modules
    runs-on: ubuntu-latest
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        path: combined_artifact
        pattern: kmod-r8125-*
        merge-multiple: true

    - name: Merge All Artifacts
      run: |
        mkdir -p combined_artifact
        find all_artifacts -name '*.ipk' -exec mv {} combined_artifact/ \;
        cd combined_artifact && md5sum *.ipk > md5sum.txt

    - name: Upload Combined Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.KMOD_VERSION }}
        path: combined_artifact/**/*

  deploy:
    needs: collect_and_upload
    name: Create Release and Upload Artifacts
    runs-on: ubuntu-latest

    steps:
    - name: Download Combined Artifact
      uses: actions/download-artifact@v3
      with:
        name: ${{ env.KMOD_VERSION }}

    - name: Prepare Release
      run: |
        mkdir -p artifact
        mv *.ipk artifact/
        cd artifact && md5sum *.ipk > md5sum.txt

        wget -O release.txt $RELEASE_URL
        echo -e "\nUpdated at $(date)" >> release.txt

    - name: Upload to GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        name: ${{ env.KMOD_VERSION }}
        tag_name: ${{ env.KMOD_VERSION }}
        body_path: release.txt
        files: artifact/**/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Cleanup Old Releases
      uses: dev-drprasad/delete-older-releases@v0.3.1
      with:
        keep_latest: 2
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Delete Build Artifacts
      uses: geekyeggo/delete-artifact@v2
      with:
        name: ${{ env.KMOD_VERSION }}

