name: Build Realtek r8125 driver for OpenWrt

on:
  push:
    branches:
      - main
  workflow_dispatch:
  # schedule:
  #   - cron: "0 0 * * MON"

jobs:
  build_r8125_modules:
    name: Build Modules
    runs-on: ubuntu-22.04
    continue-on-error: true

    strategy:
      fail-fast: false
      matrix:
        sdk_url:
          - https://downloads.openwrt.org/releases/22.03.5/targets/x86/64/openwrt-sdk-22.03.5-x86-64_gcc-11.2.0_musl.Linux-x86_64.tar.xz
          - https://downloads.openwrt.org/releases/22.03.6/targets/x86/64/openwrt-sdk-22.03.6-x86-64_gcc-11.2.0_musl.Linux-x86_64.tar.xz
          - https://downloads.openwrt.org/releases/22.03.7/targets/x86/64/openwrt-sdk-22.03.7-x86-64_gcc-11.2.0_musl.Linux-x86_64.tar.xz

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Initialize Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo apt-get update -qq
        sudo apt-get install -qq -y build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync python3 git-core curl tree jq
        sudo apt-get autoremove --purge -qq
        sudo apt-get clean -qq

    - name: Download and Extract SDK
      run: |
        sdk=$(basename "${{ matrix.sdk_url }}" | sed -E 's/\.tar\.(xz|zst)$//')
        wget -nv "${{ matrix.sdk_url }}"
        case "${{ matrix.sdk_url }}" in
          *.tar.xz) tar -xf "${sdk}.tar.xz" ;;
          *.tar.zst) tar --zstd -xf "${sdk}.tar.zst" ;;
          *)
            echo "::error Unknown sdk"
            exit 1
            ;;
        esac
        mkdir -p "${sdk}/package"
        cp -r r8125 "${sdk}/package/"

    - name: Compile Driver
      run: |
        sdk=$(basename "${{ matrix.sdk_url }}" | sed -E 's/\.tar\.(xz|zst)$//')

        cd "${sdk}"
        echo 'CONFIG_PACKAGE_kmod-r8125=m' > .config
        make defconfig
        if ! make package/r8125/compile -j$(nproc); then
          make package/r8125/compile -j1 V=sc || echo "Compilation failed for ${{ matrix.sdk_url }}!"
        fi

        cd "${{ github.workspace }}"
        mkdir -p artifact
        find . -name 'kmod-r8125*.ipk' -exec mv {} artifact/ \;

        echo "sdk=${sdk}" >> "${GITHUB_ENV}"

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: kmod-r8125-${{ env.sdk }}
        path: ${{ github.workspace }}/artifact/**/*
        if-no-files-found: error

  upload_release:
    name: Upload Release
    needs: build_r8125_modules
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Download All Artifacts
      uses: actions/download-artifact@v4
      with:
        path: all_artifacts
        pattern: kmod-r8125-*
        merge-multiple: true

    - name: Driver Features
      run: |
        echo -e "## Driver Features\n" >> release_note.md
        echo "| Feature name | Value |" >> release_note.md
        echo "| ------------ | ----- |" >> release_note.md
        grep -E '^\w+\s*=\s*\S*$' "r8125/src/Makefile" | awk -F '[[:space:]]*=[[:space:]]*' '{print "| "$1" | "$2" |"}' >> release_note.md
        echo "" >> release_note.md

    - name: Artifact Digest
      run: |
        mkdir -p merged_artifact
        find all_artifacts -name '*.ipk' -exec mv {} merged_artifact/ \;
        cd merged_artifact
        echo -e "## Assets Digest\n" >> ../release_note.md
        echo "| File name | MD5 | SHA1 | SHA256 |" >> ../release_note.md
        echo "| --------- | --- | ---- | ------ |" >> ../release_note.md
        for file in *.ipk; do
          md5=$(md5sum "${file}" | awk '{print $1}')
          sha1=$(sha1sum "${file}" | awk '{print $1}')
          sha256=$(sha256sum "${file}" | awk '{print $1}')
          echo '| `'"${file}"'` | `'"${md5}"'` | `'"${sha1}"'` | `'"${sha256}"'` |' >> ../release_note.md
        done
        echo "" >> ../release_note.md

    - name: Build Info
      run: |
        echo -e "## Build Info\n" >> release_note.md
        echo "Updated at $(date)" >> release_note.md
        echo "Build From ${{ github.sha }}" >> release_note.md
        echo "" >> release_note.md
        pkg_version=$(grep -E '^PKG_VERSION\s*:=\s*\S*$' "r8125/Makefile" | awk -F '[[:space:]]*:=[[:space:]]*' '{print $2}')
        if [[ -z "${pkg_version}" ]]; then
          echo "::error Unknown pkg_version"
          exit 1
        fi
        echo "pkg_version=${pkg_version}" >> "${GITHUB_ENV}"

    - name: Upload to GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        name: ${{ env.pkg_version }}-${{ github.sha }}
        tag_name: ${{ env.pkg_version }}-${{ github.sha }}
        body_path: release_note.md
        files: merged_artifact/*
        fail_on_unmatched_files: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
